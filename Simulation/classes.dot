digraph "classes" {
rankdir=BT
charset="utf-8"
"simulation.Rocket" [color="black", fontcolor="black", label=<{Rocket|Cp : float<br ALIGN="LEFT"/>Cx : float<br ALIGN="LEFT"/>S<br ALIGN="LEFT"/>Sp<br ALIGN="LEFT"/>casing_mass<br ALIGN="LEFT"/>gisement : int<br ALIGN="LEFT"/>m<br ALIGN="LEFT"/>propellant : interp1d<br ALIGN="LEFT"/>propellant_mass<br ALIGN="LEFT"/>rocket_mass<br ALIGN="LEFT"/>site : int<br ALIGN="LEFT"/>t_open_para<br ALIGN="LEFT"/>thrust : interp1d<br ALIGN="LEFT"/>thrust_force<br ALIGN="LEFT"/>thrust_time<br ALIGN="LEFT"/>|Mass(t)<br ALIGN="LEFT"/>Thrust(t)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"simulation.SimulationEuler" [color="black", fontcolor="black", label=<{SimulationEuler|euler_angles : ndarray<br ALIGN="LEFT"/>fps : int<br ALIGN="LEFT"/>h : float<br ALIGN="LEFT"/>phi<br ALIGN="LEFT"/>rocket<br ALIGN="LEFT"/>simuNPoints<br ALIGN="LEFT"/>simulation_duration<br ALIGN="LEFT"/>theta<br ALIGN="LEFT"/>time : int<br ALIGN="LEFT"/>time_index<br ALIGN="LEFT"/>trajectory : ndarray<br ALIGN="LEFT"/>velocity : ndarray<br ALIGN="LEFT"/>|Euler_SingleStep(velocity, position, h)<br ALIGN="LEFT"/>RK4_SingleStep(accel, velocity, t, h)<br ALIGN="LEFT"/>acceleration(t, velocity)<br ALIGN="LEFT"/>export_data(filename)<br ALIGN="LEFT"/>run_simulation()<br ALIGN="LEFT"/>updateRotation(i, theta, phi)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"simulation.SimulationQuaternion" [color="black", fontcolor="black", label=<{SimulationQuaternion|fps : int<br ALIGN="LEFT"/>h : float<br ALIGN="LEFT"/>q : ndarray<br ALIGN="LEFT"/>rocket<br ALIGN="LEFT"/>simuNPoints<br ALIGN="LEFT"/>simulation_duration<br ALIGN="LEFT"/>time : int<br ALIGN="LEFT"/>time_index<br ALIGN="LEFT"/>trajectory : ndarray<br ALIGN="LEFT"/>velocity : ndarray<br ALIGN="LEFT"/>wi : ndarray<br ALIGN="LEFT"/>|Euler_SingleStep(velocity, position, h)<br ALIGN="LEFT"/>RK4_SingleStep(accel, velocity, t, h)<br ALIGN="LEFT"/>acceleration(t, velocity)<br ALIGN="LEFT"/>export_data(filename)<br ALIGN="LEFT"/>run_simulation()<br ALIGN="LEFT"/>self_acceleration(t, velocity)<br ALIGN="LEFT"/>update_rotation(eq, qi, wi, h)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
}
